
moh_tkim_lab7_part5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000414  000004a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000414  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800108  00800108  000004b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b43  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d5  00000000  00000000  000010d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a8  00000000  00000000  000019a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00001f50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000580  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000d1  00000000  00000000  000025b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002685  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4d c0       	rjmp	.+154    	; 0x9c <__ctors_end>
   2:	00 00       	nop
   4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
   6:	00 00       	nop
   8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
   a:	00 00       	nop
   c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
   e:	00 00       	nop
  10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
  12:	00 00       	nop
  14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
  16:	00 00       	nop
  18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
  22:	00 00       	nop
  24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>
  26:	00 00       	nop
  28:	56 c0       	rjmp	.+172    	; 0xd6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	54 c0       	rjmp	.+168    	; 0xd6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	52 c0       	rjmp	.+164    	; 0xd6 <__bad_interrupt>
  32:	00 00       	nop
  34:	75 c0       	rjmp	.+234    	; 0x120 <__vector_13>
  36:	00 00       	nop
  38:	4e c0       	rjmp	.+156    	; 0xd6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4c c0       	rjmp	.+152    	; 0xd6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4a c0       	rjmp	.+148    	; 0xd6 <__bad_interrupt>
  42:	00 00       	nop
  44:	48 c0       	rjmp	.+144    	; 0xd6 <__bad_interrupt>
  46:	00 00       	nop
  48:	46 c0       	rjmp	.+140    	; 0xd6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	44 c0       	rjmp	.+136    	; 0xd6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	42 c0       	rjmp	.+132    	; 0xd6 <__bad_interrupt>
  52:	00 00       	nop
  54:	40 c0       	rjmp	.+128    	; 0xd6 <__bad_interrupt>
  56:	00 00       	nop
  58:	3e c0       	rjmp	.+124    	; 0xd6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3c c0       	rjmp	.+120    	; 0xd6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3a c0       	rjmp	.+116    	; 0xd6 <__bad_interrupt>
  62:	00 00       	nop
  64:	38 c0       	rjmp	.+112    	; 0xd6 <__bad_interrupt>
  66:	00 00       	nop
  68:	36 c0       	rjmp	.+108    	; 0xd6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	34 c0       	rjmp	.+104    	; 0xd6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	32 c0       	rjmp	.+100    	; 0xd6 <__bad_interrupt>
  72:	00 00       	nop
  74:	30 c0       	rjmp	.+96     	; 0xd6 <__bad_interrupt>
  76:	00 00       	nop
  78:	2e c0       	rjmp	.+92     	; 0xd6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2c c0       	rjmp	.+88     	; 0xd6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2a c0       	rjmp	.+84     	; 0xd6 <__bad_interrupt>
  82:	00 00       	nop
  84:	28 c0       	rjmp	.+80     	; 0xd6 <__bad_interrupt>
  86:	00 00       	nop
  88:	26 c0       	rjmp	.+76     	; 0xd6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	e9 00       	.word	0x00e9	; ????
  8e:	f0 00       	.word	0x00f0	; ????
  90:	05 01       	movw	r0, r10
  92:	0d 01       	movw	r0, r26
  94:	11 01       	movw	r2, r2
  96:	19 01       	movw	r2, r18
  98:	1d 01       	movw	r2, r26
  9a:	25 01       	movw	r4, r10

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d0 e4       	ldi	r29, 0x40	; 64
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	e4 e1       	ldi	r30, 0x14	; 20
  b0:	f4 e0       	ldi	r31, 0x04	; 4
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a8 30       	cpi	r26, 0x08	; 8
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>

000000c2 <__do_clear_bss>:
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	a8 e0       	ldi	r26, 0x08	; 8
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
  ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
  cc:	a5 31       	cpi	r26, 0x15	; 21
  ce:	b2 07       	cpc	r27, r18
  d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
  d2:	3a d1       	rcall	.+628    	; 0x348 <main>
  d4:	9d c1       	rjmp	.+826    	; 0x410 <_exit>

000000d6 <__bad_interrupt>:
  d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <TimerOn>:
		case D_wait:
		flex_time = 1000;
		break;
		
		case D_boost:
		flex_time = 400;
  d8:	8b e0       	ldi	r24, 0x0B	; 11
  da:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  de:	8d e7       	ldi	r24, 0x7D	; 125
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  f0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  f4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  f8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
  fc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
 100:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
 104:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
 108:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 10c:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 110:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 114:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
 118:	8f b7       	in	r24, 0x3f	; 63
 11a:	80 68       	ori	r24, 0x80	; 128
 11c:	8f bf       	out	0x3f, r24	; 63
 11e:	08 95       	ret

00000120 <__vector_13>:
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	8f 93       	push	r24
 12c:	9f 93       	push	r25
 12e:	af 93       	push	r26
 130:	bf 93       	push	r27
 132:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <_avr_timer_cntcurr>
 136:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <_avr_timer_cntcurr+0x1>
 13a:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <_avr_timer_cntcurr+0x2>
 13e:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <_avr_timer_cntcurr+0x3>
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	a1 09       	sbc	r26, r1
 146:	b1 09       	sbc	r27, r1
 148:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 14c:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 150:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 154:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
 158:	89 2b       	or	r24, r25
 15a:	8a 2b       	or	r24, r26
 15c:	8b 2b       	or	r24, r27
 15e:	99 f4       	brne	.+38     	; 0x186 <__vector_13+0x66>
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <TimerFlag>
 166:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
 16a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
 16e:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
 172:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
 176:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 17a:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 17e:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 182:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
 186:	bf 91       	pop	r27
 188:	af 91       	pop	r26
 18a:	9f 91       	pop	r25
 18c:	8f 91       	pop	r24
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <TimerSet>:
 198:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_avr_timer_M>
 19c:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_avr_timer_M+0x1>
 1a0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_avr_timer_M+0x2>
 1a4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_avr_timer_M+0x3>
 1a8:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <_avr_timer_cntcurr>
 1ac:	70 93 0c 01 	sts	0x010C, r23	; 0x80010c <_avr_timer_cntcurr+0x1>
 1b0:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_avr_timer_cntcurr+0x2>
 1b4:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_avr_timer_cntcurr+0x3>
 1b8:	08 95       	ret

000001ba <Prrl_Cntr_SM_Tick>:
 1ba:	20 91 11 01 	lds	r18, 0x0111	; 0x800111 <p_state>
 1be:	82 2f       	mov	r24, r18
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	88 30       	cpi	r24, 0x08	; 8
 1c4:	91 05       	cpc	r25, r1
 1c6:	08 f0       	brcs	.+2      	; 0x1ca <Prrl_Cntr_SM_Tick+0x10>
 1c8:	44 c0       	rjmp	.+136    	; 0x252 <Prrl_Cntr_SM_Tick+0x98>
 1ca:	fc 01       	movw	r30, r24
 1cc:	ea 5b       	subi	r30, 0xBA	; 186
 1ce:	ff 4f       	sbci	r31, 0xFF	; 255
 1d0:	16 c1       	rjmp	.+556    	; 0x3fe <__tablejump2__>
 1d2:	87 e0       	ldi	r24, 0x07	; 7
 1d4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <led>
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 1de:	08 95       	ret
 1e0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 1e4:	81 30       	cpi	r24, 0x01	; 1
 1e6:	21 f4       	brne	.+8      	; 0x1f0 <Prrl_Cntr_SM_Tick+0x36>
 1e8:	82 e0       	ldi	r24, 0x02	; 2
 1ea:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 1ee:	08 95       	ret
 1f0:	82 30       	cpi	r24, 0x02	; 2
 1f2:	21 f4       	brne	.+8      	; 0x1fc <Prrl_Cntr_SM_Tick+0x42>
 1f4:	84 e0       	ldi	r24, 0x04	; 4
 1f6:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 1fa:	08 95       	ret
 1fc:	83 30       	cpi	r24, 0x03	; 3
 1fe:	09 f0       	breq	.+2      	; 0x202 <Prrl_Cntr_SM_Tick+0x48>
 200:	40 c0       	rjmp	.+128    	; 0x282 <Prrl_Cntr_SM_Tick+0xc8>
 202:	86 e0       	ldi	r24, 0x06	; 6
 204:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 208:	08 95       	ret
 20a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 20e:	81 30       	cpi	r24, 0x01	; 1
 210:	c1 f1       	breq	.+112    	; 0x282 <Prrl_Cntr_SM_Tick+0xc8>
 212:	83 e0       	ldi	r24, 0x03	; 3
 214:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 218:	22 c0       	rjmp	.+68     	; 0x25e <Prrl_Cntr_SM_Tick+0xa4>
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 220:	08 95       	ret
 222:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 226:	82 30       	cpi	r24, 0x02	; 2
 228:	61 f1       	breq	.+88     	; 0x282 <Prrl_Cntr_SM_Tick+0xc8>
 22a:	85 e0       	ldi	r24, 0x05	; 5
 22c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 230:	1e c0       	rjmp	.+60     	; 0x26e <Prrl_Cntr_SM_Tick+0xb4>
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 238:	08 95       	ret
 23a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 23e:	83 30       	cpi	r24, 0x03	; 3
 240:	01 f1       	breq	.+64     	; 0x282 <Prrl_Cntr_SM_Tick+0xc8>
 242:	87 e0       	ldi	r24, 0x07	; 7
 244:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 248:	1a c0       	rjmp	.+52     	; 0x27e <Prrl_Cntr_SM_Tick+0xc4>
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <p_state>
 250:	08 95       	ret
 252:	25 30       	cpi	r18, 0x05	; 5
 254:	61 f0       	breq	.+24     	; 0x26e <Prrl_Cntr_SM_Tick+0xb4>
 256:	27 30       	cpi	r18, 0x07	; 7
 258:	91 f0       	breq	.+36     	; 0x27e <Prrl_Cntr_SM_Tick+0xc4>
 25a:	23 30       	cpi	r18, 0x03	; 3
 25c:	91 f4       	brne	.+36     	; 0x282 <Prrl_Cntr_SM_Tick+0xc8>
 25e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <led>
 262:	89 30       	cpi	r24, 0x09	; 9
 264:	71 f0       	breq	.+28     	; 0x282 <Prrl_Cntr_SM_Tick+0xc8>
 266:	8f 5f       	subi	r24, 0xFF	; 255
 268:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <led>
 26c:	08 95       	ret
 26e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <led>
 272:	88 23       	and	r24, r24
 274:	31 f0       	breq	.+12     	; 0x282 <Prrl_Cntr_SM_Tick+0xc8>
 276:	81 50       	subi	r24, 0x01	; 1
 278:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <led>
 27c:	08 95       	ret
 27e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <led>
 282:	08 95       	ret

00000284 <Cntr_SM_Tick>:
 284:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <state>
 288:	82 30       	cpi	r24, 0x02	; 2
 28a:	31 f1       	breq	.+76     	; 0x2d8 <Cntr_SM_Tick+0x54>
 28c:	28 f4       	brcc	.+10     	; 0x298 <Cntr_SM_Tick+0x14>
 28e:	88 23       	and	r24, r24
 290:	41 f0       	breq	.+16     	; 0x2a2 <Cntr_SM_Tick+0x1e>
 292:	81 30       	cpi	r24, 0x01	; 1
 294:	69 f0       	breq	.+26     	; 0x2b0 <Cntr_SM_Tick+0x2c>
 296:	38 c0       	rjmp	.+112    	; 0x308 <Cntr_SM_Tick+0x84>
 298:	83 30       	cpi	r24, 0x03	; 3
 29a:	31 f1       	breq	.+76     	; 0x2e8 <Cntr_SM_Tick+0x64>
 29c:	84 30       	cpi	r24, 0x04	; 4
 29e:	61 f1       	breq	.+88     	; 0x2f8 <Cntr_SM_Tick+0x74>
 2a0:	33 c0       	rjmp	.+102    	; 0x308 <Cntr_SM_Tick+0x84>
 2a2:	87 e0       	ldi	r24, 0x07	; 7
 2a4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <led>
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <state>
 2ae:	08 95       	ret
 2b0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 2b4:	81 30       	cpi	r24, 0x01	; 1
 2b6:	21 f4       	brne	.+8      	; 0x2c0 <Cntr_SM_Tick+0x3c>
 2b8:	82 e0       	ldi	r24, 0x02	; 2
 2ba:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <state>
 2be:	32 c0       	rjmp	.+100    	; 0x324 <Cntr_SM_Tick+0xa0>
 2c0:	82 30       	cpi	r24, 0x02	; 2
 2c2:	21 f4       	brne	.+8      	; 0x2cc <Cntr_SM_Tick+0x48>
 2c4:	83 e0       	ldi	r24, 0x03	; 3
 2c6:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <state>
 2ca:	31 c0       	rjmp	.+98     	; 0x32e <Cntr_SM_Tick+0xaa>
 2cc:	83 30       	cpi	r24, 0x03	; 3
 2ce:	99 f5       	brne	.+102    	; 0x336 <Cntr_SM_Tick+0xb2>
 2d0:	84 e0       	ldi	r24, 0x04	; 4
 2d2:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <state>
 2d6:	23 c0       	rjmp	.+70     	; 0x31e <Cntr_SM_Tick+0x9a>
 2d8:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 2dc:	81 30       	cpi	r24, 0x01	; 1
 2de:	11 f1       	breq	.+68     	; 0x324 <Cntr_SM_Tick+0xa0>
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <state>
 2e6:	08 95       	ret
 2e8:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 2ec:	82 30       	cpi	r24, 0x02	; 2
 2ee:	f9 f0       	breq	.+62     	; 0x32e <Cntr_SM_Tick+0xaa>
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <state>
 2f6:	08 95       	ret
 2f8:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
 2fc:	81 11       	cpse	r24, r1
 2fe:	0f c0       	rjmp	.+30     	; 0x31e <Cntr_SM_Tick+0x9a>
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <state>
 306:	08 95       	ret
 308:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <state>
 30c:	08 95       	ret
 30e:	8f 5f       	subi	r24, 0xFF	; 255
 310:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <led>
 314:	08 95       	ret
 316:	81 50       	subi	r24, 0x01	; 1
 318:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <led>
 31c:	08 95       	ret
 31e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <led>
 322:	08 95       	ret
 324:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <led>
 328:	89 30       	cpi	r24, 0x09	; 9
 32a:	89 f7       	brne	.-30     	; 0x30e <Cntr_SM_Tick+0x8a>
 32c:	08 95       	ret
 32e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <led>
 332:	81 11       	cpse	r24, r1
 334:	f0 cf       	rjmp	.-32     	; 0x316 <Cntr_SM_Tick+0x92>
 336:	08 95       	ret

00000338 <TickFct_Combine>:
}

enum CombineLED{C_init} C_state;
void TickFct_Combine()
{
	switch(C_state)
 338:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <C_state>
 33c:	81 11       	cpse	r24, r1
 33e:	03 c0       	rjmp	.+6      	; 0x346 <TickFct_Combine+0xe>
	{
		case C_init:
		PORTB = led;
 340:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <led>
 344:	85 b9       	out	0x05, r24	; 5
 346:	08 95       	ret

00000348 <main>:
	}
}

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
 348:	11 b8       	out	0x01, r1	; 1
 34a:	8f ef       	ldi	r24, 0xFF	; 255
 34c:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 34e:	84 b9       	out	0x04, r24	; 4
 350:	15 b8       	out	0x05, r1	; 5
	
	unsigned long Cntr_elapsedTime = 0;
	const unsigned long timer_Period = 10;
	
	TimerSet(timer_Period);
 352:	6a e0       	ldi	r22, 0x0A	; 10
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	1e df       	rcall	.-452    	; 0x198 <TimerSet>
	TimerOn();
 35c:	bd de       	rcall	.-646    	; 0xd8 <TimerOn>
 35e:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <state>
	
	state = Init;
 362:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <p_state>
	p_state = p_init;
 366:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <C_state>
	C_state = C_init;
 36a:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <D_state>
	D_state = D_wait;
 36e:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <I_state>
	I_state = I_wait;
 372:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
	i = 0;
 376:	c1 2c       	mov	r12, r1
int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
	DDRB = 0xFF; PORTB = 0x00;
	
	unsigned long Cntr_elapsedTime = 0;
 378:	d1 2c       	mov	r13, r1
 37a:	76 01       	movw	r14, r12
 37c:	80 b1       	in	r24, 0x00	; 0
	I_state = I_wait;
	i = 0;
	
	while (1)
	{
		button = ~PINA & 0x03;
 37e:	80 95       	com	r24
 380:	83 70       	andi	r24, 0x03	; 3
 382:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <button>
		Prrl_Cntr_SM_Tick();
 386:	19 df       	rcall	.-462    	; 0x1ba <Prrl_Cntr_SM_Tick>
 388:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <button>
		switch(button)
 38c:	81 30       	cpi	r24, 0x01	; 1
 38e:	19 f0       	breq	.+6      	; 0x396 <main+0x4e>
 390:	82 30       	cpi	r24, 0x02	; 2
 392:	91 f0       	breq	.+36     	; 0x3b8 <main+0x70>
 394:	27 c0       	rjmp	.+78     	; 0x3e4 <main+0x9c>
 396:	88 ee       	ldi	r24, 0xE8	; 232
		{
			TickFct_inc_speed();
			case 0x01:
			if(Cntr_elapsedTime >= 1000)
 398:	c8 16       	cp	r12, r24
 39a:	83 e0       	ldi	r24, 0x03	; 3
 39c:	d8 06       	cpc	r13, r24
 39e:	e1 04       	cpc	r14, r1
 3a0:	f1 04       	cpc	r15, r1
 3a2:	00 f1       	brcs	.+64     	; 0x3e4 <main+0x9c>
				{
					TickFct_inc_speed();
				}
				else
				{
					Cntr_SM_Tick();
 3a4:	6f df       	rcall	.-290    	; 0x284 <Cntr_SM_Tick>
 3a6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
					Cntr_elapsedTime = 0;
					i += 1000;
 3aa:	88 51       	subi	r24, 0x18	; 24
 3ac:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
 3b0:	c1 2c       	mov	r12, r1
					TickFct_inc_speed();
				}
				else
				{
					Cntr_SM_Tick();
					Cntr_elapsedTime = 0;
 3b2:	d1 2c       	mov	r13, r1
 3b4:	76 01       	movw	r14, r12
 3b6:	16 c0       	rjmp	.+44     	; 0x3e4 <main+0x9c>
 3b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
				}
			}
			break;
			
			case 0x02:
			if((Cntr_elapsedTime >= flex_time) && i < 300)
 3bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 3c0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 3c4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 3c8:	c8 16       	cp	r12, r24
 3ca:	d9 06       	cpc	r13, r25
 3cc:	ea 06       	cpc	r14, r26
 3ce:	fb 06       	cpc	r15, r27
 3d0:	48 f0       	brcs	.+18     	; 0x3e4 <main+0x9c>
			{
				Cntr_SM_Tick();
 3d2:	58 df       	rcall	.-336    	; 0x284 <Cntr_SM_Tick>
 3d4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
				Cntr_elapsedTime = 0;
				i++;
 3d8:	8f 5f       	subi	r24, 0xFF	; 255
 3da:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
			
			case 0x02:
			if((Cntr_elapsedTime >= flex_time) && i < 300)
			{
				Cntr_SM_Tick();
				Cntr_elapsedTime = 0;
 3de:	c1 2c       	mov	r12, r1
 3e0:	d1 2c       	mov	r13, r1
 3e2:	76 01       	movw	r14, r12
			break;
			
			default:
			break;
		}
		TickFct_Combine();
 3e4:	a9 df       	rcall	.-174    	; 0x338 <TickFct_Combine>
 3e6:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <TimerFlag>
		while(!TimerFlag){}
 3ea:	88 23       	and	r24, r24
 3ec:	e1 f3       	breq	.-8      	; 0x3e6 <main+0x9e>
 3ee:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <TimerFlag>
		TimerFlag = 0;
 3f2:	8a e0       	ldi	r24, 0x0A	; 10
		Cntr_elapsedTime += timer_Period;
 3f4:	c8 0e       	add	r12, r24
 3f6:	d1 1c       	adc	r13, r1
 3f8:	e1 1c       	adc	r14, r1
 3fa:	f1 1c       	adc	r15, r1
 3fc:	bf cf       	rjmp	.-130    	; 0x37c <main+0x34>

000003fe <__tablejump2__>:
	}
 3fe:	ee 0f       	add	r30, r30
 400:	ff 1f       	adc	r31, r31
 402:	00 24       	eor	r0, r0
 404:	00 1c       	adc	r0, r0
 406:	0b be       	out	0x3b, r0	; 59
 408:	07 90       	elpm	r0, Z+
 40a:	f6 91       	elpm	r31, Z
 40c:	e0 2d       	mov	r30, r0
 40e:	09 94       	ijmp

00000410 <_exit>:
 410:	f8 94       	cli

00000412 <__stop_program>:
 412:	ff cf       	rjmp	.-2      	; 0x412 <__stop_program>
